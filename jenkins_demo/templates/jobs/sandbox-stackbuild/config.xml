<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.4.1">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.13.3">
      <projectUrl>https://github.com/lsst-sqre/sandbox-stackbuild/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>PROVIDER</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>aws</string>
              <string>digital_ocean</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PRODUCTS</name>
          <description></description>
          <defaultValue>lsst_distrib</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description>eg, v11_0_rc2</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>true</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/jhoblitt/sandbox-stackbuild.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/aws</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <quietPeriod>0</quietPeriod>
  <assignedNode>vagrant</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.13.3">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>BOX</name>
      <values>
        <string>el6</string>
        <string>el7</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>vagrant</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>vagrant up $BOX --destroy-on-error --provider=$PROVIDER</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ARGS=()

if [ ! -z &quot;$TAG&quot; ]; then
  ARGS+=(&apos;-t&apos;)
  ARGS+=(&quot;$TAG&quot;)
fi
ARGS+=(&quot;$PRODUCTS&quot;)

vagrant ssh $BOX &lt;&lt;END
set -o errexit

set -o verbose
if grep -q -i &quot;CentOS release 6&quot; /etc/redhat-release; then
  . /opt/rh/devtoolset-3/enable
fi
set +o verbose

source ./stack/loadLSST.bash
eups distrib install ${ARGS[@]}
END</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>vagrant destroy --force $BOX</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
      <executeOn>AXES</executeOn>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <jenkins.plugins.hipchat.HipChatNotifier plugin="hipchat@0.1.9">
      <token></token>
      <room>Test Bot: Jenkins</room>
      <startNotification>true</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>true</notifyAborted>
      <notifyNotBuilt>true</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <startJobMessage></startJobMessage>
      <completeJobMessage></completeJobMessage>
    </jenkins.plugins.hipchat.HipChatNotifier>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <EnvInjectBuildWrapper plugin="envinject@1.92.1">
      <info>
        <groovyScriptContent>// https://stackoverflow.com/questions/25692515/groovy-built-in-rest-http-client

def mac = new URL(&quot;http://169.254.169.254/latest/meta-data/mac&quot;).getText()
def subnet_id = new URL(&quot;http://169.254.169.254/latest/meta-data/network/interfaces/macs/${mac}/subnet-id&quot;).getText()
def security_group_ids = new URL(&quot;http://169.254.169.254/latest/meta-data/network/interfaces/macs/${mac}/security-group-ids&quot;).getText().split(&quot;\n&quot;)

return [
  AWS_SUBNET_ID: subnet_id,
  AWS_SECURITY_GROUPS: security_group_ids.join(&quot; &quot;),
]</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@1.92.1">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>AWS_ACCESS_KEY_ID</name>
          <value>fixme</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>AWS_SECRET_ACCESS_KEY</name>
          <value>fixme</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>AWS_DEFAULT_REGION</name>
          <value>fixme</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
